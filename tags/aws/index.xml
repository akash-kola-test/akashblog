<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Aws on Akash´s corner</title>
    <link>https://akash-kola-test.github.io/akashblog/tags/aws/</link>
    <description>Recent content in Aws on Akash´s corner</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://akash-kola-test.github.io/akashblog/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Kinesis - Overview</title>
      <link>https://akash-kola-test.github.io/akashblog/posts/internship-learnings/aws-kinesis---overview/</link>
      <pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://akash-kola-test.github.io/akashblog/posts/internship-learnings/aws-kinesis---overview/</guid>
      <description>&lt;p&gt;We can use Amazon Kinesis Data Streams to collect and process large streams of data records in real time&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;AWS Kinesis - High Level Architecture&#34; loading=&#34;lazy&#34; src=&#34;https://akash-kola-test.github.io/akashblog/akashblog/images/AWS%20Kinesis%20-%20High%20Level%20Architecture.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;A Kinesis stream is made of set of shards. Each shard has a sequence of records. Each data record has a sequence number assigned to it&lt;/p&gt;
&lt;p&gt;Data Record is nothing but a unit of data which might indicate some event or just a message&lt;/p&gt;
&lt;h3 id=&#34;capacity-mode&#34;&gt;Capacity Mode&lt;/h3&gt;
&lt;p&gt;We you can choose between an &lt;strong&gt;on-demand&lt;/strong&gt; mode and a &lt;strong&gt;provisioned&lt;/strong&gt; mode for data streams. With on-demand mode, Kinesis will automatically manages the shards in order to provide necessary throughput. But with provisioned mode we must specify the number of shards for the data stream.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
